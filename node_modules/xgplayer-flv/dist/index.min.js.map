{"version":3,"file":"index.min.js","sources":["../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../../node_modules/eventemitter3/index.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../../xgplayer-streaming-shared/src/services/gap.js","../../xgplayer-streaming-shared/src/services/sei.js","../../xgplayer-streaming-shared/src/services/bandwidth.js","../../xgplayer-streaming-shared/src/services/stats.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../xgplayer-transmuxer/src/mp4/fmp4-remuxer.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../src/flv/services/buffer-service.js","../src/flv/utils.js","../src/flv/index.js","../src/flv/options.js","../src/plugin-extension.js","../src/plugin.js"],"sourcesContent":["export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n","export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n}\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN:'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE:'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME:'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    OPTION: 'OPTION',\n    DASH:'DASH',\n    LICENSE:'LICENSE',\n    CUSTOM_LICENSE:'CUSTOM_LICENSE',\n    MSE_HIJACK:'MSE_HIJACK',\n    EME_HIJACK:'EME_HIJACK',\n    SIDX:'SIDX',\n    NO_CANPLAY_ERROR:'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR:'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED:'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK:'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE:'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED:'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED:'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY:'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH:1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]:2103,\n  [ERR.NETWORK_NOTFOUND]:2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]:2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK:5204,\n    EME_HIJACK:5301\n  },\n  [ERR.DRM]:{\n    LICENSE:7100,\n    CUSTOM_LICENSE:7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]:{\n    NO_CANPLAY_ERROR:9001,\n    BUFFERBREAK_ERROR:9002,\n    WAITING_TIMEOUT_ERROR:9003\n  }\n}\n\n\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(this._prefix, nowTime(), ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(this._prefix, nowTime(), ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(this._prefix, nowTime(), ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(this._prefix, nowTime(), ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = this._prefix + nowTime() + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","/* eslint-disable no-undef */\nimport { createPublicPromise, nowTime } from './utils'\nimport { Buffer } from './buffer'\nimport { StreamingError, ERR } from './error'\nimport { isBrowser } from './env'\nimport { Logger } from './logger'\n\nfunction getMediaSource (preferMMS = true) {\n  try {\n    if (!isBrowser) return null\n\n    if (preferMMS && typeof ManagedMediaSource !== 'undefined') return ManagedMediaSource\n\n    return window.MediaSource\n  } catch (e) {}\n}\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false,\n      perferMMS: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('[debug mse] setDuration ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('[debug mse] setDuration')\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costtime = nowTime() - this._st\n        this._logger.debug('MSE OPEN', costtime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n\n    const MediaSource = getMediaSource(this._config.perferMMS)\n\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costtime = nowTime() - this._st\n      this._logger.debug('MSE OPEN')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n\n    if (MediaSource.name === 'ManagedMediaSource') {\n      media.disableRemotePlayback = true\n    } else {\n      media.disableRemotePlayback = false\n    }\n\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n    }\n\n    if (this.media) {\n      this.media.disableRemotePlayback = false\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') return Promise.reject()\n\n    return this._enqueueOp(type, () => {\n      sb.changeType(mimeType)\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this.remove(k, startTime, endTime)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      const sb = this._sourceBuffer[k]\n      p = this.remove(k, 0, Buffer.end(Buffer.get(sb)))\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initOpque = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initOpque.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initOpque.length > 0 && this._queue[type].push(...initOpque)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error))\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug('UpdateEnd', op.opName, costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    const MediaSource = getMediaSource()\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, millisec) {\n  return Math.round(byteLen * 8 * 1000 / millisec / 1024)\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && typeof fetch !== 'undefined' ? new FetchLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _finnalUrl = ''\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      !FetchLoader.isSupported()\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n    } else {\n      config = url\n    }\n\n    config = Object.assign({}, this._config, config)\n\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","import { Buffer } from '../buffer'\n\nexport class GapService {\n  _prevCurrentTime = 0\n\n  do (media, maxJumpDistance = 3, isLive, seekThreshold = 1) {\n    if (!media) return\n\n    const currentTime = media.currentTime\n    let jumpTo = 0\n\n    if (this._prevCurrentTime === currentTime) {\n      const info = Buffer.info(Buffer.get(media), currentTime)\n      if (!info.buffers.length) return\n\n      if (\n        (isLive && info.nextStart) ||\n        (info.nextStart && info.nextStart - currentTime < maxJumpDistance)\n      ) {\n        jumpTo = info.nextStart + 0.1\n      } else if (info.end && info.end - currentTime > seekThreshold && !media.seeking) {\n        jumpTo = currentTime + 0.1\n      }\n    }\n\n    this._prevCurrentTime = currentTime\n\n    if (jumpTo && currentTime !== jumpTo) {\n      media.currentTime = jumpTo\n    }\n  }\n}\n","import { EVENT } from '../event'\n\nexport class SeiService {\n  _seiSet = new Set()\n\n  constructor (emitter) {\n    this.emitter = emitter\n\n    emitter.on(EVENT.SEI, sei => {\n      if (sei) this._seiSet.add(sei)\n    })\n  }\n\n  throw (currentTime, isLive) {\n    if (currentTime === null || currentTime === undefined || !this._seiSet.size) return\n    const min = currentTime - 0.2\n    const max = currentTime + 0.2\n    const toThrow = []\n    this._seiSet.forEach(sei => {\n      if (sei.time >= min && sei.time <= max) {\n        toThrow.push(sei)\n      }\n    })\n\n    toThrow.forEach(sei => {\n      this._seiSet.delete(sei)\n      this.emitter.emit(EVENT.SEI_IN_TIME, sei)\n    })\n\n    if (!isLive) return\n\n    this._seiSet.forEach(s => {\n      if (s.time < currentTime - 5) {\n        this._seiSet.delete(s)\n      }\n    })\n  }\n\n  reset () {\n    this._seiSet.clear()\n  }\n}\n","export class BandwidthService {\n  _chunkSpeeds = [] // bps\n  _speeds = [] // bps\n\n  addRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._speeds.push(8000 * totalByte / ms)\n    this._speeds = this._speeds.slice(-3)\n  }\n\n  addChunkRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._chunkSpeeds.push(8000 * totalByte / ms)\n    this._chunkSpeeds = this._chunkSpeeds.slice(-100)\n  }\n\n  getAvgSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds.reduce((a, c) => (a += c)) / this._speeds.length\n    }\n    return this._chunkSpeeds.reduce((a, c) => (a += c)) / this._chunkSpeeds.length\n  }\n\n  getLatestSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds[this._speeds.length - 1]\n    }\n    return this._chunkSpeeds[this._chunkSpeeds.length - 1]\n  }\n\n  reset () {\n    this._chunkSpeeds = []\n    this._speeds = []\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nclass Stats {\n  encodeType = '' // hevc | avc\n  audioCodec = ''\n  videoCodec = ''\n  domain = '' // stream url domain\n  fps = 0\n  bitrate = 0 // 最新1s下载数据的码率\n  width = 0\n  height = 0\n  samplerate = 0\n  channelCount = 0\n  gop = 0 // 第一个gop帧数\n\n  _bitsAccumulateSize = 0\n  _bitsAccumulateDuration = 0\n  _startGopId = -1\n\n  constructor (timescale) {\n    this._timescale = timescale\n  }\n\n  getStats () {\n    return {\n      encodeType: this.encodeType,\n      audioCodec: this.audioCodec,\n      videoCodec: this.videoCodec,\n      domain: this.domain,\n      fps: this.fps,\n      bitrate: this.bitrate,\n      width: this.width,\n      height: this.height,\n      samplerate: this.samplerate,\n      channelCount: this.channelCount,\n      gop: this.gop\n    }\n  }\n\n  setEncodeType (encode) {\n    this.encodeType = encode\n  }\n\n  setFpsFromScriptData ({data}) {\n    const fps = data?.onMetaData?.framerate\n    if (fps && fps > 0 && fps < 100) {\n      this.fps = fps\n    }\n  }\n\n  setVideoMeta (track) {\n    this.width = track.width\n    this.height = track.height\n    this.videoCodec = track.codec\n    this.encodeType = track.codecType\n    if (track.fpsNum && track.fpsDen) {\n      const fps = track.fpsNum / track.fpsDen\n      if (fps > 0 && fps < 100) {\n        this.fps = fps\n      }\n    }\n  }\n\n  setAudioMeta (track) {\n    this.audioCodec = track.codec\n    this.samplerate = track.sampleRate\n    this.channelCount = track.channelCount\n  }\n\n  setDomain (responseUrl) {\n    this.domain = responseUrl.split('/').slice(2, 3)[0]\n  }\n\n  updateBitrate (samples) {\n    if (!this.fps || this.fps >= 100) {\n      if (samples.length) {\n        const duration = samples.reduce((a,b) => a += b.duration, 0) / samples.length\n        this.fps = Math.round(this._timescale / duration)\n      }\n    }\n    samples.forEach(sample => {\n      if (this._startGopId === -1) {\n        this._startGopId = sample.gopId\n      }\n      if (sample.gopId === this._startGopId) {\n        this.gop++\n      }\n      this._bitsAccumulateDuration += sample.duration / (this._timescale / 1000)\n      this._bitsAccumulateSize += sample.units.reduce((a, c) => (a += c.length), 0)\n      if (this._bitsAccumulateDuration >= 1000) {\n        this.bitrate = this._bitsAccumulateSize * 8\n        this._bitsAccumulateDuration = 0\n        this._bitsAccumulateSize = 0\n      }\n    })\n  }\n}\n\n\n/**\n * @typedef {Object} StatsInfo\n * @property {number} downloadSpeed\n * @property {number} avgSpeed\n * @property {number} currentTime\n * @property {number} bufferEnd\n * @property {number} decodeFps\n * @property {string} encodeType\n * @property {string} audioCodec\n * @property {string} videoCodec\n * @property {string} domain\n * @property {number} fps\n * @property {number} bitrate\n * @property {number} width\n * @property {number} height\n * @property {number} samplerate\n * @property {number} channelCount\n * @property {number} gop\n */\nclass MediaStatsService {\n\n  _core = null\n\n  _samples = []\n\n  constructor (core, timescale = 1000) {\n    this._core = core\n    this._timescale = timescale\n    this._stats = new Stats(timescale)\n    this._bindEvents()\n  }\n\n\n  /** @returns {StatsInfo} */\n  getStats () {\n    const { currentTime = 0, decodeFps = 0 } = this._core?.media || {}\n    return {\n      ...this._stats.getStats(),\n      downloadSpeed: this._core?.speedInfo?.().speed || 0,\n      avgSpeed: this._core?.speedInfo?.().avgSpeed || 0,\n      currentTime,\n      bufferEnd: this._core?.bufferInfo()?.remaining || 0,\n      decodeFps\n    }\n  }\n\n  _bindEvents () {\n    this._core.on(EVENT.DEMUXED_TRACK, ({videoTrack}) => this._stats.updateBitrate(videoTrack.samples))\n\n    this._core.on(EVENT.FLV_SCRIPT_DATA, data => {\n      this._stats.setFpsFromScriptData(data)\n    })\n\n    this._core.on(EVENT.METADATA_PARSED, e => {\n      if (e.type === 'video') {\n        this._stats.setVideoMeta(e.track)\n      } else {\n        this._stats.setAudioMeta(e.track)\n      }\n    })\n\n    this._core.on(EVENT.TTFB, e => {\n      this._stats.setDomain(e.responseUrl)\n    })\n\n  }\n\n  reset () {\n    this._samples = []\n    this._stats = new Stats(this._timescale)\n  }\n\n}\n\nexport { MediaStatsService }\n","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isAudioEncryption\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  get bitsAvailable () {\n    return this._bitsAvailable\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  static parseAnnexB (data) {\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i, i + size), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if ((len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = (originObjectType === 2 || originObjectType === 5) ? originObjectType : 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n\n    if (maxSubLayersMinus1 > eg.bitsAvailable) {\n      throw new Error(`maxSubLayersMinus inavlid size ${maxSubLayersMinus1}`)\n    }\n\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BREACKED_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video breaked\n      if (this._videoTimestampBreak >= TRACK_BREACKED_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream breaked\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      audioTrack.sampleDuration = audioTrack.codecType === AudioCodecType.AAC\n        ? AAC.getFrameDuration(audioTrack.timescale, timescale)\n        : this._getG711Duration(audioTrack)\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate = audioTrack.codecType === AudioCodecType.AAC ? 1024 : refSampleDuration * audioTrack.timescale / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio breaked\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BREACKED_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        sample.duration = sampleDurationInSampleRate\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false] 切流\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n    }\n\n    if (discontinuity) {\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== 10 && // AAC\n      format !== 7 && // G.711 A-law logarithmic PCM\n      format !== 8 // G.711 mu-law logarithmic PCM\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== 10) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    if (format === 10) {\n      this._parseAac(data, pts)\n    } else {\n      this._parseG711(data, pts, format)\n    }\n  }\n\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(new AudioSample(pts, data.subarray(1)))\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (frameType === 1) {\n          sample.setToKeyframe()\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    this._parseAacData(pes)\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","import { TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse /* hashVal */ } from '../utils'\nimport Buffer from './buffer'\n// import Crypto from './crypto/crypto'\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        content = MP4.mp4a(track)\n        // console.log('[remux],mp4a, len,', content.byteLength, track.type, hashVal(content.toString()))\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","import { MP4 } from './mp4'\nimport { concatUint8Array } from '../utils'\nimport { Logger } from './logger'\n\n/**\n * @typedef {Object} RemuxResult\n * @property {Uint8Array} [videoInitSegment]\n * @property {Uint8Array} [audioInitSegment]\n * @property {Uint8Array} [videoSegment]\n * @property {Uint8Array} [audioSegment]\n */\n\nexport class FMP4Remuxer {\n  /**\n   * @param {import('../model').VideoTrack} videoTrack\n   * @param {import('../model').AudioTrack} audioTrack\n   */\n  constructor (videoTrack, audioTrack, options) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    const browserVersions = /Chrome\\/([^.]+)/.exec(navigator.userAgent)\n    this.forceFirstIDR = browserVersions && Number(browserVersions[1]) < 50\n    this.log = new Logger('FMP4Remuxer', options && options.openLog ? !options.openLog : true)\n  }\n\n  /**\n   * @param {boolean} [createInit=false]\n   * @returns {RemuxResult}\n   */\n  remux (createInit = false, options = {}) {\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n    const hasVideo = videoTrack.exist()\n    const hasAudio = audioTrack.exist()\n\n    let videoInitSegment\n    let audioInitSegment\n\n    let initSegment\n    const tracks = []\n\n    if (createInit) {\n      if (options && options.initMerge) {\n        if (hasVideo) {\n          tracks.push(this.videoTrack)\n        }\n        if (hasAudio) {\n          tracks.push(this.audioTrack)\n        }\n        initSegment = MP4.initSegment(tracks)\n      } else {\n        if (hasVideo) videoInitSegment = MP4.initSegment([this.videoTrack])\n        if (hasAudio) audioInitSegment = MP4.initSegment([this.audioTrack])\n      }\n    }\n\n    let videoSegment\n    let audioSegment\n    if (hasVideo && videoTrack.hasSample()) {\n      videoSegment = this._remuxVideo()\n    }\n\n    if (hasAudio && audioTrack.hasSample()) {\n      audioSegment = this._remuxAudio()\n    }\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    return {\n      initSegment,\n      videoInitSegment,\n      audioInitSegment,\n      videoSegment,\n      audioSegment\n    }\n  }\n\n  _remuxVideo () {\n    const track = this.videoTrack\n    if (this.forceFirstIDR) {\n      track.samples[0].flag = { dependsOn: 2, isNonSyncSample: 0 }\n    }\n    const samples = track.samples\n\n    let mdatSize = 0\n\n    samples.forEach((s) => {\n      mdatSize += s.units.reduce((t, c) => (t + c.byteLength), 0)\n      mdatSize += (s.units.length * 4)\n    })\n\n    const mdata = new Uint8Array(mdatSize)\n    const mdatView = new DataView(mdata.buffer)\n\n    for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n      sample = samples[i]\n\n      let sampleSize = 0\n      sample.units.forEach((u) => {\n        mdatView.setUint32(offset, u.byteLength)\n        offset += 4\n        mdata.set(u, offset)\n        offset += u.byteLength\n        sampleSize += (4 + u.byteLength)\n      })\n      sample.size = sampleSize\n    }\n    const mdat = MP4.mdat(mdata)\n\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n\n  }\n\n  _remuxAudio () {\n    const track = this.audioTrack\n    const mdata = new Uint8Array(track.samples.reduce((t, c) => (t + c.size), 0))\n    track.samples.reduce((offset, s) => {\n      mdata.set(s.data, offset)\n      return offset + s.size\n    }, 0)\n    const mdat = MP4.mdat(mdata)\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n  }\n}\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","import { FlvDemuxer, FMP4Remuxer, WarningType } from 'xgplayer-transmuxer'\nimport { MSE, Buffer, EVENT, ERR, StreamingError, Logger, concatUint8Array } from 'xgplayer-streaming-shared'\nconst logger = new Logger('BufferService')\n\nexport class BufferService {\n  /** @type {import('../index').Flv | null} */\n  flv = null\n\n  _demuxer = new FlvDemuxer()\n  _remuxer = null\n  _mse = null\n  _softVideo = null\n\n  _sourceCreated = false\n\n  _needInitSegment = true\n  _discontinuity = true\n  _contiguous = false\n\n  _initSegmentId = ''\n\n  _cachedBuffer = null\n\n  _demuxStartTime = 0\n\n  _opts = null\n\n  get baseDts () {\n    return this._demuxer?._fixer?._baseDts\n  }\n\n  get blobUrl () {\n    return this._mse?.url\n  }\n\n  /**\n   * @param {import('../index').Flv} flv\n   * @param {Object} [softVideo]\n   */\n  constructor (flv, softVideo, opts) {\n    this.flv = flv\n    this._opts = opts\n\n    if (softVideo) { // soft decode\n      this._softVideo = softVideo\n    } else {\n      this._remuxer = new FMP4Remuxer(this._demuxer.videoTrack, this._demuxer.audioTrack)\n      this._mse = new MSE(null, {perferMMS: !!opts.perferMMS})\n      this._mse.bindMedia(flv.media)\n    }\n  }\n\n  isFull (mediaType = MSE.VIDEO){\n    return this._mse.isFull(mediaType)\n  }\n\n  seamlessSwitch () {\n    this._needInitSegment = true\n    this._discontinuity = true\n    this._contiguous = true\n    this._initSegmentId = ''\n  }\n\n  unContiguous (startTime) {\n    this._contiguous = false\n    this._demuxStartTime = startTime\n  }\n\n  async reset (reuseMse = false) {\n    if (this._mse && !reuseMse) {\n      await this._mse.unbindMedia()\n      await this._mse.bindMedia(this.flv.media)\n    }\n    this._needInitSegment = true\n    this._discontinuity = true\n    this._contiguous = false\n    this._sourceCreated = false\n    this._initSegmentId = ''\n  }\n\n  async endOfStream () {\n    if (this._mse) {\n      if (this._sourceCreated) {\n        await this._mse.endOfStream()\n        this.flv.emit(EVENT.BUFFEREOS)\n      }\n    } else if (this._softVideo) {\n      this._softVideo.endOfStream()\n    }\n  }\n\n  async updateDuration (duration) {\n    if (this._mse) {\n      if (!this._mse.isOpened) {\n        await this._mse.open()\n      }\n      logger.debug('update duration', duration)\n      await this._mse.updateDuration(duration)\n    }\n  }\n\n  async destroy () {\n    if (this._mse) {\n      await this._mse.unbindMedia()\n    }\n\n    this._mse = null\n    this._softVideo = null\n    this._demuxer = null\n    this._remuxer = null\n  }\n\n  async appendBuffer (chunk) {\n    if (this._cachedBuffer) {\n      chunk = concatUint8Array(this._cachedBuffer, chunk)\n      this._cachedBuffer = null\n    }\n\n    const demuxer = this._demuxer\n    if (!chunk || !chunk.length || !demuxer) return\n\n    try {\n      demuxer.demuxAndFix(chunk, this._discontinuity, this._contiguous, this._demuxStartTime)\n    } catch (error) {\n      throw new StreamingError(ERR.DEMUX, ERR.SUB_TYPES.FLV, error)\n    }\n    const { videoTrack, audioTrack, metadataTrack } = demuxer\n\n    let videoExist = videoTrack.exist()\n    let audioExist = audioTrack.exist()\n\n    if (this._opts.onlyAudio) {\n      videoExist = false\n      videoTrack.present = false\n    }\n\n    if (this._opts.onlyVideo) {\n      audioExist = false\n      audioTrack.present = false\n    }\n\n    if (\n      (!videoExist && videoTrack.present) ||\n      (!audioExist && audioTrack.present)\n    ) {\n      let duration = 0\n      const track = videoExist ? videoTrack : audioExist ? audioTrack : undefined\n      if (track && track.samples.length) {\n        duration = ((track.samples[track.samples.length - 1].originPts - track.samples[0].originPts) / track.timescale) * 1000\n      }\n      if (duration > this._opts.analyzeDuration) {\n        logger.warn(`analyze duration exceeded, ${duration}ms`, track)\n        videoTrack.present = videoExist\n        audioTrack.present = audioExist\n        this.flv.emit(EVENT.ANALYZE_DURATION_EXCEEDED, { duration })\n      } else {\n        this._cachedBuffer = chunk\n        return\n      }\n    }\n\n    const videoType = videoTrack.type\n    const audioType = audioTrack.type\n    this._fireEvents(videoTrack, audioTrack, metadataTrack)\n    this._discontinuity = false\n    this._contiguous = true\n    this._demuxStartTime = 0\n\n    const mse = this._mse\n\n    // emit demuxed track\n    this.flv.emit(EVENT.DEMUXED_TRACK, {videoTrack})\n\n    const newId = `${videoTrack.codec}/${videoTrack.width}/${videoTrack.height}/${audioTrack.codec}/${audioTrack.config}`\n    if (newId !== this._initSegmentId) {\n      this._needInitSegment = true\n      this._initSegmentId = newId\n      this._emitMetaParsedEvent(videoTrack, audioTrack)\n    }\n\n    if (mse) {\n      if (!this._sourceCreated) {\n        await mse.open()\n        if (videoExist) {\n          logger.log(`codec: video/mp4;codecs=${videoTrack.codec}`)\n          mse.createSource(videoType, `video/mp4;codecs=${videoTrack.codec}`)\n        }\n        if (audioExist) {\n          logger.log(`codec: audio/mp4;codecs=${audioTrack.codec}`)\n          mse.createSource(audioType, `audio/mp4;codecs=${audioTrack.codec}`)\n        }\n        this._sourceCreated = true\n        this.flv.emit(EVENT.SOURCEBUFFER_CREATED)\n      }\n\n      let remuxResult\n      try {\n        remuxResult = this._remuxer.remux(this._needInitSegment)\n      } catch (error) {\n        throw new StreamingError(ERR.REMUX, ERR.SUB_TYPES.FMP4, error)\n      }\n\n      if (this._needInitSegment && !remuxResult.videoInitSegment && !remuxResult.audioInitSegment) {\n        return\n      }\n\n      this._needInitSegment = false\n\n      const p = []\n      if (remuxResult.videoInitSegment) p.push(mse.append(videoType, remuxResult.videoInitSegment))\n      if (remuxResult.audioInitSegment) p.push(mse.append(audioType, remuxResult.audioInitSegment))\n      if (remuxResult.videoSegment) p.push(mse.append(videoType, remuxResult.videoSegment))\n      if (remuxResult.audioSegment) p.push(mse.append(audioType, remuxResult.audioSegment))\n\n      return Promise.all(p)\n    } else if (this._softVideo) {\n      this._softVideo.appendBuffer(videoTrack, audioTrack)\n    }\n  }\n\n  async evictBuffer (bufferBehind) {\n    const media = this.flv.media\n    if (!this._mse || !this._demuxer || !media || !bufferBehind || bufferBehind < 0) return\n    const currentTime = media.currentTime\n    const removeEnd = currentTime - bufferBehind\n    if (removeEnd <= 0) return\n    const start = Buffer.start(Buffer.get(media))\n    if (start + 1 >= removeEnd) return\n    return this._mse.clearBuffer(0, removeEnd).then(() => this.flv.emit(EVENT.REMOVE_BUFFER, { removeEnd }))\n  }\n\n  _emitMetaParsedEvent (videoTrack, audioTrack) {\n    if (videoTrack.exist()) {\n      this.flv.emit(EVENT.METADATA_PARSED, {\n        type: 'video',\n        track: videoTrack,\n        meta: {\n          codec: videoTrack.codec,\n          timescale: videoTrack.timescale,\n          width: videoTrack.width,\n          height: videoTrack.height,\n          sarRatio: videoTrack.sarRatio,\n          baseDts: videoTrack.baseDts\n        }\n      })\n    }\n    if (audioTrack.exist()) {\n      this.flv.emit(EVENT.METADATA_PARSED, {\n        type: 'audio',\n        track: audioTrack,\n        meta: {\n          codec: audioTrack.codec,\n          channelCount: audioTrack.channelCount,\n          sampleRate: audioTrack.sampleRate,\n          timescale: audioTrack.timescale,\n          baseDts: audioTrack.baseDts\n        }\n      })\n    }\n\n    logger.debug('track parsed', videoTrack, audioTrack)\n  }\n\n  _fireEvents (videoTrack, audioTrack, metadataTrack) {\n    logger.debug(videoTrack.samples, audioTrack.samples)\n\n    metadataTrack.flvScriptSamples.forEach(sample => {\n      this.flv.emit(EVENT.FLV_SCRIPT_DATA, sample)\n      logger.debug('flvScriptData', sample)\n    })\n\n    videoTrack.samples.forEach((sample) => {\n      if (sample.keyframe) {\n        this.flv.emit(EVENT.KEYFRAME, { pts: sample.pts })\n      }\n    })\n\n    videoTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AV_SHIFT:\n          type = EVENT.LARGE_AV_FIRST_FRAME_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP:\n          type = EVENT.LARGE_VIDEO_DTS_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK:\n          type = EVENT.MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT\n          break\n        default:\n      }\n\n      if (type) this.flv.emit(EVENT.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('video exception', warn)\n    })\n    audioTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AUDIO_GAP:\n          type = EVENT.LARGE_AUDIO_DTS_GAP_DETECT\n          break\n        case WarningType.AUDIO_FILLED:\n          type = EVENT.AUDIO_GAP_DETECT\n          break\n        case WarningType.AUDIO_DROPPED:\n          type = EVENT.AUDIO_OVERLAP_DETECT\n          break\n        default:\n      }\n\n      if (type) this.flv.emit(EVENT.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('audio exception', warn)\n    })\n\n    metadataTrack.seiSamples.forEach(sei => {\n      this.flv.emit(EVENT.SEI, {\n        ...sei,\n        sei: {\n          code: sei.data.type,\n          content: sei.data.payload,\n          dts: sei.pts\n        }\n      })\n    })\n  }\n}\n","export function searchKeyframeIndex (list, value) {\n  let idx = 0\n\n  const last = list.length - 1\n  let mid = 0\n  let lbound = 0\n  let ubound = last\n\n  if (value < list[0]) {\n    idx = 0\n    lbound = ubound + 1 // skip search\n  }\n\n  while (lbound <= ubound) {\n    mid = lbound + Math.floor((ubound - lbound) / 2)\n    if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\n      idx = mid\n      break\n    } else if (list[mid] < value) {\n      lbound = mid + 1\n    } else {\n      ubound = mid - 1\n    }\n  }\n\n  return idx\n}\n","import EventEmitter from 'eventemitter3'\nimport {\n  NetLoader,\n  Buffer,\n  MSE,\n  EVENT,\n  StreamingError,\n  BandwidthService,\n  SeiService,\n  GapService,\n  MediaStatsService,\n  isMediaPlaying,\n  Logger,\n  getVideoPlaybackQuality\n} from 'xgplayer-streaming-shared'\nimport { Logger as TransmuxerLogger } from 'xgplayer-transmuxer'\nimport { BufferService } from './services'\nimport { getOption } from './options'\nimport { searchKeyframeIndex } from './utils'\n\nexport const logger = new Logger('flv')\n\nconst MAX_HOLE = 0.1\n\n/**\n * @typedef {import(\"../../../xgplayer-streaming-shared/es/services/stats\").StatsInfo} Stats\n */\nexport class Flv extends EventEmitter {\n  /** @type {HTMLMediaElement | null} */\n  media = null\n\n  _loading = false\n\n  /** @type {import('./options').FlvOption} */\n  _opts = null\n\n  /** @type {BufferService} */\n  _bufferService = null\n\n  /** @type {GapService} */\n  _gapService = null\n\n  /** @type {MediaStatsService} */\n  _stats = null\n\n  /** @type {NetLoader} */\n  _mediaLoader = null\n\n  _maxChunkWaitTimer = null\n\n  _tickTimer = null\n  _tickInterval = 500\n\n  _urlSwitching = false\n  _seamlessSwitching = false\n  _disconnectRetryCount = 0\n  _preLoadEndPoint = 0\n\n  _keyframes = null\n  _acceptRanges = true\n\n  /**\n   * @param {import('./options').FlvOption} opts\n   */\n  constructor (opts) {\n    super()\n    this._opts = getOption(opts)\n    this.media = this._opts.media || document.createElement('video')\n    this._opts.media = null\n    this._firstProgressEmit = false\n    this._mediaLoader = new NetLoader({\n      ...this._opts.fetchOptions,\n      retry: this._opts.retryCount,\n      retryDelay: this._opts.retryDelay,\n      timeout: this._opts.loadTimeout,\n      onRetryError: this._onRetryError,\n      onProgress: this._onProgress,\n      responseType: 'arraybuffer'\n    })\n\n    this._disconnectRetryCount = this._opts.disconnectRetryCount\n\n    this._bufferService = new BufferService(\n      this,\n      this._opts.softDecode ? this.media : undefined,\n      this._opts\n    )\n    this._seiService = new SeiService(this)\n    this._bandwidthService = new BandwidthService()\n    this._stats = new MediaStatsService(this)\n\n    if (!this._opts.softDecode) {\n      this._gapService = new GapService()\n    }\n\n    this.media.addEventListener('play', this._onPlay)\n    this.media.addEventListener('seeking', this._onSeeking)\n    this.media.addEventListener('timeupdate', this._onTimeupdate)\n    this.media.addEventListener('progress', this._onBufferUpdate)\n    this.media.addEventListener('waiting', this._onWaiting)\n\n    this.on(EVENT.FLV_SCRIPT_DATA, this._onFlvScriptData)\n  }\n\n  get version () {\n    return __VERSION__\n  }\n\n  get isLive () {\n    return this._opts.isLive\n  }\n\n  get baseDts () {\n    return this._bufferService?.baseDts\n  }\n\n  get seekable () {\n    return !!this._keyframes && this._acceptRanges\n  }\n\n  get loader () {\n    return this._mediaLoader\n  }\n\n  get blobUrl () {\n    return this._bufferService?.blobUrl\n  }\n\n  speedInfo () {\n    return {\n      speed: this._bandwidthService.getLatestSpeed(),\n      avgSpeed: this._bandwidthService.getAvgSpeed()\n    }\n  }\n\n  /**\n   * @returns {Stats}\n   */\n  getStats () {\n    return this._stats.getStats()\n  }\n\n  bufferInfo (maxHole = MAX_HOLE) {\n    return Buffer.info(Buffer.get(this.media), this.media?.currentTime, maxHole)\n  }\n\n  playbackQuality () {\n    return getVideoPlaybackQuality(this.media)\n  }\n\n  /**\n   * load or reload source\n   * @param {string} [url]\n   * @return {Promise}\n   */\n  async load (url, reuseMse = false) {\n    if (!this._bufferService) return\n    await this._reset(reuseMse)\n\n    this._loadData(url, this._opts.isLive ? [] : [0, this._opts.defaultVodLoadSize])\n\n    clearTimeout(this._tickTimer)\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n  }\n\n  /** @return {Promise} */\n  async replay (seamlesslyReload = this._opts.seamlesslyReload, isPlayEmit) {\n    if (!this.media) return\n\n    this._resetDisconnectCount()\n\n    if (seamlesslyReload) {\n      await this._clear()\n\n      setTimeout(() => {\n        this._loadData(this._opts.url)\n        this._bufferService.seamlessSwitch()\n        this._seamlessSwitching = true\n      })\n    } else {\n      await this.load()\n    }\n    return this.media.play(!isPlayEmit).catch(() => {})\n  }\n\n  disconnect () {\n    logger.debug('disconnect!')\n    return this._clear()\n  }\n\n  /**\n   * @param {string} url\n   * @param {boolean} [seamless=false]\n   */\n  async switchURL (url, seamless) {\n    if (!this._bufferService) return\n\n    this._resetDisconnectCount()\n\n    if (!seamless || !this._opts.isLive) {\n      await this.load(url)\n      this._urlSwitching = true\n      return this.media.play(true).catch(() => {})\n    }\n\n    await this._clear()\n\n    setTimeout(() => {\n      this._loadData(url)\n      this._bufferService.seamlessSwitch()\n      this._urlSwitching = true\n      this._seamlessSwitching = true\n    })\n  }\n\n  /** @return {Promise} */\n  async destroy () {\n    if (!this.media) return\n    this.removeAllListeners()\n    this._seiService.reset()\n    this.media.removeEventListener('play', this._onPlay)\n    this.media.removeEventListener('seeking', this._onSeeking)\n    this.media.removeEventListener('timeupdate', this._onTimeupdate)\n    this.media.removeEventListener('waiting', this._onWaiting)\n    this.media.removeEventListener('progress', this._onBufferUpdate)\n    await Promise.all([this._clear(), this._bufferService.destroy()])\n    this.media = null\n    this._bufferService = null\n  }\n\n  /**\n   * @param {('video'|'audio')?} mediaType\n   * @returns {Boolean}\n   */\n  static isSupported (mediaType) {\n    if (!mediaType || mediaType === 'video' || mediaType === 'audio') {\n      return MSE.isSupported()\n    }\n\n    return typeof WebAssembly !== 'undefined'\n  }\n\n  static enableLogger () {\n    Logger.enable()\n    TransmuxerLogger.enable()\n  }\n\n  static disableLogger () {\n    Logger.disable()\n    TransmuxerLogger.disable()\n  }\n\n  _emitError (error, endOfStream = true) {\n    logger.table(error)\n    logger.error(error)\n    logger.error(this.media?.error)\n    if (this._urlSwitching) {\n      this._urlSwitching = false\n      this._seamlessSwitching = false\n      this.emit(EVENT.SWITCH_URL_FAILED, error)\n    }\n    this.emit(EVENT.ERROR, error)\n    if (endOfStream) {\n      this._seiService.reset()\n      this._end()\n    }\n  }\n\n  async _reset (reuseMse = false) {\n    this._seiService.reset()\n    this._bandwidthService.reset()\n    this._stats.reset()\n    await this._clear()\n    await this._bufferService.reset(reuseMse)\n  }\n\n  async _loadData (url, range) {\n    if (url) this._opts.url = url\n    let finnalUrl = (url = this._opts.url)\n    if (!url) throw new Error('Source url is missing')\n\n    if (this._opts.preProcessUrl) {\n      finnalUrl = this._opts.preProcessUrl(url).url\n    }\n\n    this._mediaLoader.finnalUrl = finnalUrl\n\n    this.emit(EVENT.LOAD_START, { url: finnalUrl })\n\n    logger.debug('load data, loading:', this._loading, finnalUrl)\n\n    if (this._loading) {\n      await this._mediaLoader.cancel()\n    }\n\n    this._loading = true\n    try {\n      await this._mediaLoader.load({ url: finnalUrl, range })\n    } catch (error) {\n      this._loading = false\n      return this._emitError(StreamingError.network(error))\n    }\n  }\n\n  /**\n   *\n   * @param {ArrayBuffer} chunk\n   * @param {boolean} done\n   * @param { {startTime: number, endTime: number, st: number, firstByteTime: number}}\n   * startTime: 当前流式分段开始read时间\n   * endTime: 当前流式分段结束read时间\n   * st: 拉流开始时间\n   * firstByteTime: 首字节响应时间\n   * @param {Response} response\n   */\n  _onProgress = async (\n    chunk,\n    done,\n    { startTime, endTime, st, firstByteTime },\n    response\n  ) => {\n    this._loading = !done\n    if (!this._firstProgressEmit) {\n      if (!this.media) {\n        this._mediaLoader?.cancel()\n        return\n      }\n      const headers = response.headers\n      this.emit(EVENT.TTFB, {\n        url: this._opts.url,\n        responseUrl: response.url,\n        elapsed: st ? firstByteTime - st : endTime - startTime\n      })\n      this.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers })\n      this._acceptRanges =\n        !!headers?.get('Accept-Ranges') || !!headers?.get('Content-Range')\n      this._firstProgressEmit = true\n    }\n\n    if (!this._bufferService) return\n    clearTimeout(this._maxChunkWaitTimer)\n\n    this._bandwidthService.addChunkRecord(chunk?.byteLength, endTime - startTime)\n\n    try {\n      await this._bufferService.appendBuffer(chunk)\n      this._bufferService?.evictBuffer(this._opts.bufferBehind)\n    } catch (error) {\n      if (!this.isLive && this._bufferService.isFull()) {\n        await this._mediaLoader.cancel()\n        this._loading = false\n        // detect the large buffer size can appended\n        const remaining = this.bufferInfo().remaining\n        this._opts.preloadTime = parseInt(remaining) / 2\n        return\n      }\n      return this._emitError(StreamingError.create(error))\n    }\n\n    if (this._urlSwitching) {\n      this._urlSwitching = false\n      this.emit(EVENT.SWITCH_URL_SUCCESS, { url: this._opts.url })\n    }\n\n    // ！！\n    if (this._seamlessSwitching) {\n      this._seamlessSwitching = false\n      this._tick()\n    }\n\n    if (done && !this.media.seeking) {\n      this.emit(EVENT.LOAD_COMPLETE)\n      logger.debug('load done')\n\n      if (this.isLive && this._disconnectRetryCount <= 0) {\n        this._end()\n      }\n      return\n    }\n\n    if (!this.isLive) return\n\n    const { maxReaderInterval } = this._opts\n    if (maxReaderInterval) {\n      clearTimeout(this._maxChunkWaitTimer)\n      this._maxChunkWaitTimer = setTimeout(() => {\n        if (this._disconnectRetryCount) {\n          this._disconnectRetryCount--\n          this.load()\n          return\n        }\n        logger.debug('onMaxChunkWait', maxReaderInterval)\n        this._end()\n      }, maxReaderInterval)\n    }\n  }\n\n  _onRetryError = (error, retryTime) => {\n    logger.debug('load retry', error, retryTime)\n\n    this.emit(EVENT.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n\n  async _clear () {\n    if (this._mediaLoader) await this._mediaLoader.cancel()\n    clearTimeout(this._maxChunkWaitTimer)\n    clearTimeout(this._tickTimer)\n    this._loading = false\n    this._firstProgressEmit = false\n  }\n\n  _end = () => {\n    this._clear()\n    if (this._bufferService) {\n      this._bufferService.endOfStream()\n    }\n\n    logger.debug('end stream')\n  }\n\n  _resetDisconnectCount = () => {\n    this._disconnectRetryCount = this._opts.disconnectRetryCount\n  }\n\n  _tick = () => {\n    clearTimeout(this._tickTimer)\n    const { media } = this\n    if (!media) return\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n\n    const bufferEnd = Buffer.end(Buffer.get(media))\n\n    if (bufferEnd < MAX_HOLE || !media.readyState) return\n\n    const opts = this._opts\n    if (isMediaPlaying(media)) {\n      if (this._gapService) {\n        this._gapService.do(media, opts.maxJumpDistance, this.isLive, 3)\n      }\n    } else {\n      if (!media.currentTime && this._gapService) {\n        this._gapService.do(media, opts.maxJumpDistance, this.isLive, 3)\n        return\n      }\n      if (opts.isLive && bufferEnd > opts.disconnectTime) {\n        this.disconnect()\n      }\n    }\n  }\n\n  _onPlay = () => {\n    const canReplay = this._opts.softDecode || this.media?.buffered?.length\n    if (this.isLive) {\n      if (!this._loading && canReplay) {\n        this.replay(undefined, true)\n      }\n      return\n    }\n\n    const info = this.bufferInfo()\n    if ((info.start || info.nextStart) > MAX_HOLE) {\n      this._tick()\n    }\n  }\n\n  _onSeeking = async () => {\n    if (!this.isLive && this.seekable) {\n      this._preLoadEndPoint = -1\n      this._checkPreload()\n    }\n  }\n\n  _onTimeupdate = () => {\n    if (!this.media) return\n\n    const opts = this._opts\n    const currentTime = this.media.currentTime\n\n    if (opts.isLive && opts.maxLatency && opts.targetLatency) {\n      const bufferEnd = Buffer.end(Buffer.get(this.media))\n      const latency = bufferEnd - currentTime\n      if (latency >= opts.maxLatency) {\n        this.media.currentTime = bufferEnd - opts.targetLatency\n      }\n    }\n    this._seiService.throw(currentTime, true)\n\n    if (opts.isLive || !this.seekable || this._loading) return\n\n    this._checkPreload()\n  }\n\n  _onWaiting = () => {\n    // retry for stream disconnect\n    if (this.isLive && !this._loading && this._disconnectRetryCount) {\n      this._disconnectRetryCount--\n      this.load()\n    }\n  }\n\n  _onBufferUpdate = () => {\n    if (this._opts.isLive) return\n    const { end, nextEnd } = this.bufferInfo()\n    if (Math.abs((end || nextEnd) - this.media.duration) < 1) {\n      this._end()\n      // start with gap and buffer append finished untimely\n      if (this.media.readyState <= 2) {\n        this._tick()\n      }\n    }\n  }\n\n  _checkPreload = async () => {\n    const { remaining: remainingBuffer = 0 } = this.bufferInfo()\n    const opts = this._opts\n    const filepositions = this._keyframes.filepositions\n    const times = this._keyframes.times\n    const currentTime = this.media.currentTime\n\n    if (remainingBuffer < opts.preloadTime) {\n      const i = searchKeyframeIndex(\n        this._keyframes.times,\n        currentTime + remainingBuffer + MAX_HOLE\n      )\n      let end = searchKeyframeIndex(\n        this._keyframes.times,\n        currentTime + remainingBuffer + this._opts.preloadTime\n      )\n      if (end === i) {\n        end = i + 1\n      }\n\n      if (this._preLoadEndPoint === end) return\n\n      const startByte = filepositions[i]\n      if (startByte === null || startByte === undefined) return\n      await this._mediaLoader.cancel()\n      this._loadData(null, [startByte, filepositions[end]])\n      this._preLoadEndPoint = end\n      this._bufferService.unContiguous(times[i])\n    }\n  }\n\n  _onFlvScriptData = sample => {\n    const keyframes = sample.data?.onMetaData?.keyframes\n    const duration = sample.data?.onMetaData?.duration\n    if (keyframes) {\n      this._keyframes = keyframes\n    }\n\n    if (!this._opts.isLive && duration) {\n      this._bufferService.updateDuration(duration)\n    }\n  }\n}\n\ntry {\n  if (localStorage.getItem('xgd')) {\n    Flv.enableLogger()\n  } else {\n    Flv.disableLogger()\n  }\n} catch (error) {\n  // ignore\n}\n","/**\n * @typedef {{\n *  media: HTMLMediaElement,\n *  url?: string,\n *  isLive?: boolean,\n *  softDecode?: boolean,\n *  analyzeDuration?: number,\n *  maxJumpDistance?: number,\n *  maxLatency?: number,\n *  targetLatency?: number,\n *  bufferBehind?: number,\n *  retryCount?: number,\n *  retryDelay?: number,\n *  disconnectRetryCount?: number\n *  loadTimeout?: number,\n *  maxReaderInterval?: number,\n *  preloadTime?: number,\n *  defaultVodLoadSize?: number,\n *  disconnectTime?: number,\n *  fetchOptions?: RequestInit,\n *  seamlesslyReload: boolean,\n*   keepStatusAfterSwitch?: boolean,\n*   onlyVideo?: boolean,\n*   onlyAudio?: boolean,\n*   preferMMS?: boolean,\n*   preProcessUrl?: (url: string, ext?: { [propName: string]: any }) => { url: string, [propName: string]: any }\n * }} FlvOption\n */\n\n/**\n * @param {FlvOption} opts\n * @returns {FlvOption}\n */\nexport function getOption (opts) {\n  const ret = {\n    retryCount: 3,\n    retryDelay: 1000,\n    disconnectRetryCount: 0,\n    loadTimeout: 10000,\n    maxReaderInterval: 5000,\n    preloadTime: 5,\n    defaultVodLoadSize: 10000000,\n    isLive: false,\n    softDecode: false,\n    bufferBehind: 10,\n    maxJumpDistance: 3,\n    analyzeDuration: 20000,\n    seamlesslyReload: false,\n    keepStatusAfterSwitch: true,\n    onlyVideo: false,\n    onlyAudio: false,\n    preferMMS: false,\n    ...opts\n  }\n\n  if (ret.isLive) {\n    if (ret.preloadTime) {\n      // compat old\n\n      if (!ret.maxLatency) {\n        ret.maxLatency = ret.preloadTime * 2\n      }\n      if (!ret.targetLatency) {\n        ret.targetLatency = ret.preloadTime\n      }\n\n      if (ret.disconnectTime === null || ret.disconnectTime === undefined) {\n        ret.disconnectTime = ret.maxLatency\n      }\n    }\n  }\n\n  return ret\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nexport default class PluginExtension {\n  constructor (opts, plugin) {\n    this._opts = opts\n    this._plugin = plugin\n    this._init()\n  }\n\n  _init () {\n    const { media, preloadTime, innerDegrade, decodeMode } = this._opts\n\n    if (!media) return\n\n    if (innerDegrade) {\n      media.setAttribute('innerdegrade', innerDegrade)\n    }\n    if (preloadTime) {\n      media.setAttribute('preloadtime', preloadTime)\n    }\n\n    if (media.setDecodeMode) {\n      media.setDecodeMode(decodeMode)\n    }\n\n    this._bindEvents()\n  }\n\n  _bindEvents () {\n    const { media } = this._opts\n\n    media.addEventListener('lowdecode', this._onLowDecode)\n  }\n\n    _onLowDecode = () => {\n      const { media, innerDegrade, backupURL } = this._opts\n\n      this._plugin?.player?.emit('lowdecode', media.degradeInfo)\n      this._plugin?.player?.emit('core_event', {\n        ...media.degradeInfo,\n        eventName: EVENT.LOWDECODE\n      })\n\n      if ((innerDegrade === 1 || innerDegrade === 3) && backupURL) {\n        this._degrade(backupURL)\n      }\n    }\n\n    /**\n   * @param {string | undefined} url\n   */\n  _degrade = (url) => {\n    const { player } = this._plugin\n    const originVideo = player.video\n\n    if (originVideo?.TAG !== 'MVideo') return\n\n    const newVideo = player.video.degradeVideo\n\n    player.video = newVideo\n\n    originVideo.degrade(url)\n\n    if (url) {\n      player.config.url = url\n    }\n\n    // replace live-video to video element\n    const firstChild = player.root.firstChild\n\n    if (firstChild.TAG === 'MVideo') {\n      player.root.replaceChild(newVideo, firstChild)\n    }\n    const flvPlugin = this._plugin.constructor.pluginName.toLowerCase()\n    player.unRegisterPlugin(flvPlugin)\n\n    // play\n    player.once('canplay', () => {\n      player.play()\n    })\n  }\n\n  forceDegradeToVideo = (url) => {\n    const { innerDegrade } = this._opts\n\n    // 降级to video+m3u8\n    if (innerDegrade === 1 || innerDegrade === 3) {\n      this._degrade(url)\n    }\n  }\n\n  destroy () {\n    this._opts?.media?.removeEventListener('lowdecode', this._onLowDecode)\n    this._plugin = null\n  }\n}\n","import { BasePlugin, Events, Errors } from 'xgplayer'\nimport { EVENT } from 'xgplayer-streaming-shared'\nimport { Flv } from './flv'\nimport PluginExtension from './plugin-extension'\n\nexport class FlvPlugin extends BasePlugin {\n  static Flv = Flv\n\n  static get pluginName () {\n    return 'flv'\n  }\n\n  /** @type {Flv} */\n  flv = null;\n\n  /** @type {PluginExtension} */\n  pluginExtension = null\n\n  /** @type {Flv} */\n  get core () {\n    return this.flv\n  }\n\n  /** @type {string} */\n  get version () {\n    return this.flv?.version\n  }\n\n  /** @type {boolean} */\n  get softDecode () {\n    const mediaType = this.player?.config?.mediaType\n    return !!mediaType && mediaType !== 'video' && mediaType !== 'audio'\n  }\n\n  get loader () {\n    return this.flv?.loader\n  }\n\n  beforePlayerInit () {\n    const config = this.player.config\n\n    if (!config.url) return\n\n    if (this.flv) this.flv.destroy()\n\n    this.player.switchURL = this._onSwitchURL\n\n    const flvOpts = config.flv || {}\n    if (flvOpts.disconnectTime === null || flvOpts.disconnectTime === undefined) {\n      flvOpts.disconnectTime = 0\n    }\n\n    this.flv = new Flv({\n      softDecode: this.softDecode,\n      isLive: config.isLive,\n      media: this.player.video,\n      preProcessUrl: (url, ext) => this.player.preProcessUrl?.(url, ext) || {url, ext},\n      ...flvOpts\n    })\n\n    if (!this.softDecode) {\n      BasePlugin.defineGetterOrSetter(this.player, {\n        url: {\n          get: () => {\n            return this.flv?.blobUrl\n          },\n          configurable: true\n        }\n      })\n    }\n\n    if (this.softDecode) {\n      this.pluginExtension = new PluginExtension({\n        media: this.player.video,\n        ...config.flv\n      }, this)\n      this.player.forceDegradeToVideo = (...args) => this.pluginExtension?.forceDegradeToVideo(...args)\n    }\n\n    if (config.isLive) {\n      this.player?.useHooks('replay', () => this.flv?.replay())\n    }\n\n    this.on(Events.URL_CHANGE, this._onSwitchURL)\n    this.on(Events.DESTROY, this.destroy)\n\n    this._transError()\n    this._transCoreEvent(EVENT.TTFB)\n    this._transCoreEvent(EVENT.LOAD_START)\n    this._transCoreEvent(EVENT.LOAD_RESPONSE_HEADERS)\n    this._transCoreEvent(EVENT.LOAD_COMPLETE)\n    this._transCoreEvent(EVENT.LOAD_RETRY)\n    this._transCoreEvent(EVENT.SOURCEBUFFER_CREATED)\n    this._transCoreEvent(EVENT.ANALYZE_DURATION_EXCEEDED)\n    this._transCoreEvent(EVENT.REMOVE_BUFFER)\n    this._transCoreEvent(EVENT.BUFFEREOS)\n    this._transCoreEvent(EVENT.KEYFRAME)\n    this._transCoreEvent(EVENT.METADATA_PARSED)\n    this._transCoreEvent(EVENT.SEI)\n    this._transCoreEvent(EVENT.SEI_IN_TIME)\n    this._transCoreEvent(EVENT.FLV_SCRIPT_DATA)\n    this._transCoreEvent(EVENT.STREAM_EXCEPTION)\n    this._transCoreEvent(EVENT.SWITCH_URL_SUCCESS)\n    this._transCoreEvent(EVENT.SWITCH_URL_FAILED)\n\n    this.flv.load(config.url, true)\n  }\n\n  /**\n   * @return {import('./flv').Stats | undefined}\n   */\n  getStats = () => {\n    return this.flv?.getStats()\n  }\n\n  destroy = () => {\n    if (this.flv) {\n      this.flv.destroy()\n      this.flv = null\n    }\n    this.pluginExtension?.destroy()\n    this.pluginExtension = null\n  }\n\n  /**\n   * @param {string | boolean} [mediaType]\n   * @param {string} [codec]\n   * @returns {boolean}\n   * - mediaType: 默认检测 MSE 对 H264 codec是否支持，传入 true 或者配置参数的mediaType的取值检测 WebAssembly是否支持\n   * - codec: 暂无使用\n   */\n  static isSupported (mediaType, codec) {\n    return Flv.isSupported(mediaType, codec)\n  }\n\n  static isSupportedMMS () {\n    return typeof ManagedMediaSource !== 'undefined'\n  }\n\n  /**\n   *\n   * @param {string} url\n   * @param {boolean | {seamless: boolean}} seamless\n   */\n  _onSwitchURL = (url, seamless) => {\n    if (this.flv) {\n      this.player.config.url = url\n\n      if (typeof seamless === 'object') {\n        seamless = seamless.seamless\n      }\n\n      this.flv.switchURL(url, seamless)\n\n      if (!seamless && this.player.config?.flv?.keepStatusAfterSwitch) {\n        this._keepPauseStatus()\n      }\n    }\n  }\n\n  _keepPauseStatus = () => {\n    const paused = this.player.paused\n    if (!paused) return\n    this.player.once('canplay', () => {\n      this.player.pause()\n    })\n  }\n\n  _onDefinitionChange = ({ to }) => {\n    if (this.flv) this.flv.switchURL(to)\n  }\n\n  _transError () {\n    this.flv.on(EVENT.ERROR, (err) => {\n      if (this.player) {\n        this.player.emit(Events.ERROR, new Errors(this.player, err))\n      }\n    })\n  }\n\n  _transCoreEvent (eventName) {\n    this.flv.on(eventName, (e) => {\n      if (this.player) {\n        this.player.emit('core_event', {\n          ...e,\n          eventName\n        })\n      }\n    })\n  }\n}\n"],"names":["createPublicPromise","res","rej","promise","Promise","resolve","reject","used","apply","arguments","nowTime","parseInt","performance","now","e","Date","getTime","Buffer","_classCallCheck","key","value","buf","length","end","start","b","buffered","error","maxHole","buffers","i","l","bufLen","last","lastEnd","push","reduce","a","c","pos","undefined","index","nextStart","nextEnd","prevStart","prevEnd","item","currentTime","behind","remaining","totalLength","ERR","FLV","HLS","MP4","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_defineProperty","_ERR_CODE","StreamingError","_Error","_inherits","_super","_createSuper","type","subType","origin","payload","msg","_this","call","message","errorType","originError","ext","errorCode","errorMessage","Error","_error$response","isTimeout","url","response","httpCode","status","isBrowser","window","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","Logger","name","config","this","_prefix","concat","logCacheLevel","logMaxSize","logSize","logTextArray","_createClass","_console","_len","args","Array","_key","logCache","disabled","console","debug","_console2","_len2","_key2","log","_console3","_len3","_key3","warn","_console4","_len4","_key4","text","_len5","logText","_key5","finLogText","map","logable","JSON","stringify","delLog","shift","join","reset","_console5","group","table","groupEnd","val","toLocaleString","reduceDepth","_typeof","objType","Object","prototype","toString","slice","obj","maxDepth","depth","result","includes","hasOwnProperty","getMediaSource","preferMMS","ManagedMediaSource","MediaSource","OP_NAME","MSE","media","_this2","create","queue","_queue","op","opName","costtime","_opst","_logger","context","_startQueue","event","_config","assign","getDefaultConfig","bindMedia","openLog","enable","_enqueueBlockingOp2","_unbindMedia","_bindMedia","get","_this$mediaSource","mediaSource","readyState","_url","_this$mediaSource2","duration","_mseFullFlag","VIDEO","_this3","isReduceDuration","bufferEnd","keys","_sourceBuffer","forEach","k","Math","max","_enqueueBlockingOp","isEnded","_this4","_openPromise","isOpened","ms","addEventListener","onOpen","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_context","prev","next","unbindMedia","perferMMS","revokeObjectURL","src","URL","createObjectURL","disableRemotePlayback","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this6","_context2","t","x","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this7","changeType","_enqueueOp","createSource","buffer","_this8","byteLength","_this8$_sourceBuffer$","appendBuffer","startTime","endTime","_this9","isInsertHead","remove","p","_this10","_this11","allClear","_this$_queue$type","initOpque","isinit","reason","_this12","setLiveSeekableRange","exec","_this13","splice","then","_callee3","types","waiters","_this14","_context3","prom","all","updating","_x2","_x3","_x4","indexOf","timestampOffset","_this15","_this16","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","ret","encode","encodeURIComponent","replace","setUrlParams","params","v","str","isArray","toISOString","isObject","filter","Boolean","hashIndex","createResponse","data","done","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","Number","isNaN","options","calculateSpeed","byteLen","millisec","round","EVENT","has","prefix","Events","EE","fn","once","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","module","exports","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_ref","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","logger","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","init","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","_ref2","costTime","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","Uint8Array","time","catch","_error","_reader","t0","st","getReader","err","_cache","_writeIdx","reader","pump","_ref3","_this3$_range","startRange","startByte","curLen","retData","temp","read","_receivedLength","set","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","from","to","_internalOpen","_startTime","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","onerror","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_this$_range","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_getPrototypeOf","_step","_iterator","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","s","n","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","concatUint8Array","arr","prevLen","d","sleep","NetLoader","cfg","transformRequest","integrity","getConfig","isSupported","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","GapService","maxJumpDistance","isLive","seekThreshold","jumpTo","_prevCurrentTime","info","seeking","SeiService","Set","sei","_seiSet","add","size","min","toThrow","delete","clear","BandwidthService","totalByte","_speeds","_chunkSpeeds","Stats","timescale","_timescale","encodeType","audioCodec","videoCodec","domain","fps","bitrate","width","height","samplerate","channelCount","gop","_data$onMetaData","onMetaData","framerate","track","codec","codecType","fpsNum","fpsDen","sampleRate","responseUrl","samples","sample","_startGopId","gopId","_bitsAccumulateDuration","_bitsAccumulateSize","units","MediaStatsService","core","_core","_stats","_bindEvents","_this$_core","_this$_core2","_this$_core2$speedInf","_this$_core3","_this$_core3$speedInf","_this$_core4","_this$_core4$bufferIn","_ref2$currentTime","_ref2$decodeFps","decodeFps","getStats","downloadSpeed","speedInfo","avgSpeed","bufferInfo","videoTrack","updateBitrate","setFpsFromScriptData","setVideoMeta","setAudioMeta","setDomain","_samples","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","sequenceNumber","baseMediaDecodeTime","present","pid","pps","sps","vps","sarRatio","warnings","hvcC","isVideoEncryption","AudioTrack","sampleDuration","isAudioEncryption","VideoSample","pts","dts","originPts","originDts","keyframe","flag","dependsOn","isNonSyncSample","AudioSample","sampleOffset","Sample","FlvScriptSample","_Sample","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","_data","_bytesAvailable","_loadWord","_bitsAvailable","position","availableBytes","workingBytes","subarray","_word","DataView","getUint32","count","skipBytes","floor","bits","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","checkLength","array","ua","navigator","userAgent","toLocaleLowerCase","isSafari","test","isFirefox","isAndroid","readBig32","getAvcCodec","codecs","h","parse","NALu","offset","dataLen","unit","isHevc","uuid","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","AAC","rate","FREQ","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","bitsAvailable","MAX_SILENT_FRAME_DURATION","AUDIO_EXCETION_LOG_EMIT_DURATION","FlvFixer","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","discontinuity","contiguous","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","refSampleDurationInt","first","lastSample","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","_getG711Duration","sampleDurationInSampleRate","nextPts","silentFrame","_getSilentFrame","silentSample","sampleSize","getSilentFrame","AMF","_parseValue","byteOffset","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","timestamp","getInt16","decode","getUint16","FlvDemuxer","_fixer","_remainingData","_headerParsed","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","_parseAac","_parseG711","parseAudioSpecificConfig","sampleRateIndex","frameType","codecId","packetType","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","setToKeyframe","parseSEI","_gopId","hevc","_needAddMetaBeforeKeyFrameNal","Concat","ResultConstructor","arrays","self","UINT32_MAX","pow","tracks","find","FTYPHEV1","FTYPAVC1","ftyp","moov","content","kid","box","pssh","useEME","encv","enca","mvhd","mvhdDurtion","mvhdTimecale","mvex","_toConsumableArray","trak","tkhd","id","tkhdDuration","mdia","mdhd","hdlr","minf","HDLR_TYPES","VMHD","SMHD","DINF","stbl","extBox","stss","entries","stsd","STTS","STSC","STSZ","STCO","mp4a","avc1hev1","esds","sinf","_concat$concat","hSpacing","vSpacing","avcc","btrt","pasp","avcC","tenc","schi","default_IsEncrypted","default_IV_size","default_KID","frma","data_format","charCodeAt","schm","typ","hvc1","avc1","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","trex","moof","mfhd","traf","tfhd","tfdt","sencLength","isVideo","videoSenc","subsamples","videoSencLength","saiz","saio","trun","trun1","senc","sbgp","sdtp","extension","sampleCount","writeUint32","audioSenc","flags","samplesLength","InitializationVector","writeUint16","BytesOfClearData","BytesOfProtectedData","version","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i","_samples$i$flag","_samples$i$cts","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","trackMP4","mdiaMP4","minfMP4","stblMP4","stts","stsc","stsz","stco","ctts","_ref5","_ref6","firstChunk","samplesPerChunk","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","vmhd","smhd","StblTable","FMP4Remuxer","browserVersions","forceFirstIDR","createInit","videoInitSegment","audioInitSegment","initSegment","videoSegment","audioSegment","hasVideo","hasAudio","initMerge","_remuxVideo","_remuxAudio","mdata","mdatView","_loop","_offset","_sample","u","setUint32","Base","properties","clone","constructor","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","nBytes","rcache","r","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","finalize","HMAC","_Base3","_super4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","iv","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","pad","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t1","t2","t3","CTR","_CTR","counter","_counter","keystream","BufferService","flv","softVideo","opts","_opts","_softVideo","_remuxer","_demuxer","_mse","_evictBuffer","_appendBuffer","_destroy","_updateDuration","_endOfStream","_reset","_this$_demuxer","_this$_demuxer$_fixer","_this$_mse","mediaType","isFull","_needInitSegment","_discontinuity","_contiguous","_initSegmentId","_demuxStartTime","reuseMse","_args","_sourceCreated","updateDuration","_callee4","_context4","_callee5","demuxer","videoExist","audioExist","videoType","audioType","mse","newId","remuxResult","_context5","_cachedBuffer","demuxAndFix","onlyAudio","onlyVideo","analyzeDuration","_fireEvents","_emitMetaParsedEvent","remux","_callee6","bufferBehind","removeEnd","_context6","clearBuffer","meta","code","searchKeyframeIndex","list","idx","mid","lbound","ubound","MAX_HOLE","Flv","_clear2","_loadData2","_reset2","_switchURL","_replay","_load","_this$_mediaLoader","_this$_bufferService","maxReaderInterval","_loading","_firstProgressEmit","_mediaLoader","elapsed","_acceptRanges","_bufferService","_maxChunkWaitTimer","_bandwidthService","addChunkRecord","evictBuffer","preloadTime","_emitError","_urlSwitching","_seamlessSwitching","_tick","_disconnectRetryCount","_end","retryTime","network","_clear","disconnectRetryCount","_tickTimer","_tickInterval","isMediaPlaying","paused","ended","playbackRate","_gapService","do","disconnectTime","disconnect","_this$media","_this$media$buffered","canReplay","softDecode","replay","seekable","_preLoadEndPoint","_checkPreload","maxLatency","targetLatency","_seiService","throw","_this$bufferInfo","_this$bufferInfo2","_this$bufferInfo2$rem","remainingBuffer","filepositions","times","_keyframes","_loadData","unContiguous","_sample$data","_sample$data$onMetaDa","_sample$data2","_sample$data2$onMetaD","keyframes","loadTimeout","defaultVodLoadSize","seamlesslyReload","keepStatusAfterSwitch","document","createElement","fetchOptions","_onRetryError","_onPlay","_onSeeking","_onTimeupdate","_onBufferUpdate","_onWaiting","_onFlvScriptData","_this$_bufferService2","_this$_bufferService3","blobUrl","getLatestSpeed","getAvgSpeed","_this$media2","getVideoPlaybackQuality","droppedVideoFrames","corruptedVideoFrames","totalVideoFrames","creationTime","webkitDroppedFrameCount","webkitDecodedFrameCount","_args4","_x5","isPlayEmit","_args5","_resetDisconnectCount","seamlessSwitch","play","seamless","switchURL","_x6","_x7","_callee7","_context7","destroy","_this$media3","_callee8","_args8","_context8","_callee9","finnalUrl","_context9","preProcessUrl","_x8","_x9","_callee10","_context10","WebAssembly","TransmuxerLogger","disable","localStorage","getItem","enableLogger","disableLogger","PluginExtension","plugin","_this$_plugin","_this$_plugin$player","_this$_plugin2","_this$_plugin2$player","_this$_opts","innerDegrade","backupURL","_plugin","player","degradeInfo","eventName","_degrade","originVideo","TAG","newVideo","degradeVideo","degrade","firstChild","root","replaceChild","flvPlugin","pluginName","unRegisterPlugin","_init","_this$_opts2","decodeMode","setAttribute","setDecodeMode","_onLowDecode","_this$_opts3","_this$_opts3$media","FlvPlugin","_BasePlugin","_this$flv","_this$pluginExtension","pluginExtension","_this$player$config","_this$player$config$f","_keepPauseStatus","pause","_this$flv2","_this$player","_this$player$config2","_this$flv3","_onSwitchURL","flvOpts","_this$player2","_this2$player$preProc","_this2$player","defineGetterOrSetter","_this2$flv","configurable","forceDegradeToVideo","_this2$pluginExtensio","useHooks","_this2$flv2","URL_CHANGE","DESTROY","_transError","_transCoreEvent","Errors","BasePlugin"],"mappings":"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"}